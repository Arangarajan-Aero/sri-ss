stages:
  - dependency_scanning

dependency_scanning:
  stage: dependency_scanning
  image: registry.gitlab.com/gitlab-org/security-products/analyzers/dependency-scanning:latest
  variables:
    DS_PACKAGE_MANAGER: "nuget"
  script:
    - /analyzer run
  artifacts:
    reports:
      dependency_scanning: gl-dependency-scanning-report.json
    expire_in: 1 week
  allow_failure: true



stages:
  - dependency_scanning

dependency_scanning:
  stage: dependency_scanning
  tags:
    - windows  # Specify that the job should run on a Windows runner
  image: mcr.microsoft.com/dotnet/sdk:6.0  # .NET SDK image, but this might need adjustment for Windows
  script:
    - |
      # Set the required environment variable for NuGet
      $env:DS_PACKAGE_MANAGER="nuget"
      
      # Restore dependencies and build the project
      dotnet restore
      dotnet build

      # Install GitLab dependency scanning tool (if applicable)
      dotnet tool install --global GitLab.DependencyScanning

      # Run the dependency scanning tool and output the results
      gitlab-dependency-scanning --output=gl-dependency-scanning-report.json

  artifacts:
    reports:
      dependency_scanning: gl-dependency-scanning-report.json  # Specify the location of the report
    expire_in: 1 week  # Set an expiration for the report artifacts

  allow_failure: true  # Allow the job to fail without stopping the pipeline







stages:
  - dependency_scanning

dependency_scanning:
  stage: dependency_scanning
  image: mcr.microsoft.com/dotnet/sdk:6.0  # Use the .NET SDK image to build your project
  variables:
    DS_PACKAGE_MANAGER: "nuget"  # Specify NuGet as the package manager
  script:
    # Restore dependencies and run the analyzer
    - dotnet restore  # Restore NuGet packages
    - dotnet build    # Build the project
    - dotnet tool install --global GitLab.DependencyScanning # Install the dependency scanning tool
    - gitlab-dependency-scanning --output=gl-dependency-scanning-report.json # Run dependency scanning
  artifacts:
    reports:
      dependency_scanning: gl-dependency-scanning-report.json  # Specify the location of the report
    expire_in: 1 week  # Set an expiration for the report artifacts
  allow_failure: true  # Allow the job to fail without stopping the pipeline

